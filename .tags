!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
%q |cff%s|r%s", tostring	.\libs\AceHook-2.1\AceHook-2.1.lua	/^			DEFAULT_CHAT_FRAME:AddMessage(string.format("function: %q |cff%s|r%s", tostring(key), actives[value] and "00ff00Active" or "ffff00Inactive", not self.hooks[key] and " |cff7f7fff-Secure-|r" or ""))$/;"	f
) -- 	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^	self.frame:SetScript("OnUpdate", function() -- (this, elapsed)$/;"	f
...) return ... end") and AceLibrary and AceLibrary:HasInstance	.\libs\AceLibrary\AceLibrary.lua	/^if loadstring("return function(...) return ... end") and AceLibrary and AceLibrary:HasInstance(ACELIBRARY_MAJOR) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceComm-2.0\AceComm-2.0.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceDB-2.0\AceDB-2.0.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceDebug-2.0\AceDebug-2.0.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceHook-2.0\AceHook-2.0.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceHook-2.1\AceHook-2.1.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceOO-2.0\AceOO-2.0.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
...) return ... end") and AceLibrary:HasInstance	.\libs\AceTab-2.0\AceTab-2.0.lua	/^if loadstring("return function(...) return ... end") and AceLibrary:HasInstance(MAJOR_VERSION) then return end -- lua51 check$/;"	f
AceAddon.new 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^AceAddon.new = function(self, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15, m16, m17, m18, m19, m20)$/;"	f
AceAddon.prototype:Inject	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^function AceAddon.prototype:Inject(t)$/;"	f
AceAddon.prototype:PrintAddonInfo	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^function AceAddon.prototype:PrintAddonInfo()$/;"	f
AceAddon.prototype:ToString	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^function AceAddon.prototype:ToString()$/;"	f
AceAddon.prototype:init	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^function AceAddon.prototype:init()$/;"	f
AceAddon:ADDON_LOADED	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^function AceAddon:ADDON_LOADED(name)$/;"	f
AceAddon:GetAceOptionsDataTable	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^function AceAddon:GetAceOptionsDataTable(target)$/;"	f
AceAddon:InitializeAddon	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^function AceAddon:InitializeAddon(addon, name)$/;"	f
AceAddon:PLAYER_LOGIN	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^function AceAddon:PLAYER_LOGIN()$/;"	f
AceAddon:ToString	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^function AceAddon:ToString()$/;"	f
AceComm.hooks:CancelLogout	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm.hooks:CancelLogout(orig)$/;"	f
AceComm.hooks:ChatFrame_OnEvent	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm.hooks:ChatFrame_OnEvent(orig, event)$/;"	f
AceComm.hooks:FCFDropDown_LoadChannels	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm.hooks:FCFDropDown_LoadChannels(orig, a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20)$/;"	f
AceComm.hooks:JoinChannelByName	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm.hooks:JoinChannelByName(orig, channel, a,b,c,d,e,f,g,h,i)$/;"	f
AceComm.hooks:Logout	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm.hooks:Logout(orig)$/;"	f
AceComm.hooks:Quit	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm.hooks:Quit(orig)$/;"	f
AceComm:AceEvent_FullyInitialized	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:AceEvent_FullyInitialized()$/;"	f
AceComm:CHAT_MSG_ADDON	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:CHAT_MSG_ADDON(prefix, message, distribution, sender)$/;"	f
AceComm:CHAT_MSG_CHANNEL	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:CHAT_MSG_CHANNEL(text, sender, _, _, _, _, _, _, channel)$/;"	f
AceComm:CHAT_MSG_CHANNEL_JOIN	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:CHAT_MSG_CHANNEL_JOIN(_, user, _, _, _, _, _, _, channel)$/;"	f
AceComm:CHAT_MSG_CHANNEL_LEAVE	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:CHAT_MSG_CHANNEL_LEAVE(_, user, _, _, _, _, _, _, channel)$/;"	f
AceComm:CHAT_MSG_CHANNEL_LIST	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:CHAT_MSG_CHANNEL_LIST(text, _, _, _, _, _, _, _, channel)$/;"	f
AceComm:CHAT_MSG_CHANNEL_NOTICE	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	function AceComm:CHAT_MSG_CHANNEL_NOTICE(kind, _, _, deadName, _, _, _, num, channel)$/;"	f
AceComm:CHAT_MSG_SYSTEM	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:CHAT_MSG_SYSTEM(text)$/;"	f
AceComm:CHAT_MSG_WHISPER	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:CHAT_MSG_WHISPER(text, sender)$/;"	f
AceComm:IsCommRegistered	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:IsCommRegistered(prefix, distribution, customChannel)$/;"	f
AceComm:IsUserInChannel	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:IsUserInChannel(userName, distribution, customChannel)$/;"	f
AceComm:OnEmbedDisable	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:OnEmbedDisable(target)$/;"	f
AceComm:PLAYER_LOGOUT	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:PLAYER_LOGOUT()$/;"	f
AceComm:RegisterComm	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:RegisterComm(prefix, distribution, method, a4)$/;"	f
AceComm:RegisterMemoizations	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:RegisterMemoizations(values)$/;"	f
AceComm:SendCommMessage	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:SendCommMessage(distribution, person, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceComm:SendPrioritizedCommMessage	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:SendPrioritizedCommMessage(priority, distribution, person, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceComm:SetCommPrefix	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:SetCommPrefix(prefix)$/;"	f
AceComm:SetDefaultCommPriority	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:SetDefaultCommPriority(priority)$/;"	f
AceComm:UnregisterAllComms	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:UnregisterAllComms()$/;"	f
AceComm:UnregisterComm	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:UnregisterComm(prefix, distribution, customChannel)$/;"	f
AceComm:ZONE_CHANGED_NEW_AREA	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:ZONE_CHANGED_NEW_AREA()$/;"	f
AceComm:embed	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function AceComm:embed(target)$/;"	f
AceConsole:CustomPrint	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^function AceConsole:CustomPrint(r, g, b, frame, delay, connector, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceConsole:InjectAceOptionsTable	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^function AceConsole:InjectAceOptionsTable(handler, options)$/;"	f
AceConsole:PLAYER_LOGIN	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^function AceConsole:PLAYER_LOGIN()$/;"	f
AceConsole:Print	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^function AceConsole:Print(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceConsole:PrintComma	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^function AceConsole:PrintComma(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceConsole:RegisterChatCommand	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^function AceConsole:RegisterChatCommand(slashCommands, options, name)$/;"	f
AceConsole:TabCompleteInfo	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^function AceConsole:TabCompleteInfo(cmdpath)$/;"	f
AceDB:ADDON_LOADED	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:ADDON_LOADED(name)$/;"	f
AceDB:AcquireDBNamespace	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:AcquireDBNamespace(name)$/;"	f
AceDB:GetAceOptionsDataTable	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:GetAceOptionsDataTable(target)$/;"	f
AceDB:GetProfile	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:GetProfile()$/;"	f
AceDB:InitializeDB	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:InitializeDB(addonName)$/;"	f
AceDB:IsActive	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:IsActive()$/;"	f
AceDB:OnEmbedInitialize	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:OnEmbedInitialize(target, name)$/;"	f
AceDB:PLAYER_LOGOUT	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:PLAYER_LOGOUT()$/;"	f
AceDB:RegisterDB	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:RegisterDB(name, charName)$/;"	f
AceDB:RegisterDefaults	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:RegisterDefaults(kind, defaults, a3)$/;"	f
AceDB:ResetDB	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:ResetDB(kind)$/;"	f
AceDB:SetProfile	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:SetProfile(name, copyFrom)$/;"	f
AceDB:ToggleActive	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:ToggleActive(state)$/;"	f
AceDB:embed	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function AceDB:embed(target)$/;"	f
AceDebug:CustomDebug	.\libs\AceDebug-2.0\AceDebug-2.0.lua	/^function AceDebug:CustomDebug(r, g, b, frame, delay, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceDebug:CustomLevelDebug	.\libs\AceDebug-2.0\AceDebug-2.0.lua	/^function AceDebug:CustomLevelDebug(level, r, g, b, frame, delay, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceDebug:Debug	.\libs\AceDebug-2.0\AceDebug-2.0.lua	/^function AceDebug:Debug(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceDebug:GetAceOptionsDataTable	.\libs\AceDebug-2.0\AceDebug-2.0.lua	/^function AceDebug:GetAceOptionsDataTable(target)$/;"	f
AceDebug:GetDebugLevel	.\libs\AceDebug-2.0\AceDebug-2.0.lua	/^function AceDebug:GetDebugLevel()$/;"	f
AceDebug:IsDebugging	.\libs\AceDebug-2.0\AceDebug-2.0.lua	/^function AceDebug:IsDebugging()$/;"	f
AceDebug:LevelDebug	.\libs\AceDebug-2.0\AceDebug-2.0.lua	/^function AceDebug:LevelDebug(level, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceDebug:SetDebugLevel	.\libs\AceDebug-2.0\AceDebug-2.0.lua	/^function AceDebug:SetDebugLevel(level)$/;"	f
AceDebug:SetDebugging	.\libs\AceDebug-2.0\AceDebug-2.0.lua	/^function AceDebug:SetDebugging(debugging)$/;"	f
AceEvent:CancelAllScheduledEvents	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:CancelAllScheduledEvents()$/;"	f
AceEvent:CancelScheduledEvent	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:CancelScheduledEvent(t)$/;"	f
AceEvent:EnableDebugging	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:EnableDebugging()$/;"	f
AceEvent:IsBucketEventRegistered	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:IsBucketEventRegistered(event)$/;"	f
AceEvent:IsEventRegistered	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:IsEventRegistered(event)$/;"	f
AceEvent:IsEventScheduled	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:IsEventScheduled(t)$/;"	f
AceEvent:IsFullyInitialized	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:IsFullyInitialized()$/;"	f
AceEvent:IsPostPlayerLogin	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:IsPostPlayerLogin()$/;"	f
AceEvent:OnEmbedDisable	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:OnEmbedDisable(target)$/;"	f
AceEvent:RegisterAllEvents	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:RegisterAllEvents(method)$/;"	f
AceEvent:RegisterBucketEvent	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:RegisterBucketEvent(event, delay, method)$/;"	f
AceEvent:RegisterEvent	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:RegisterEvent(event, method, once)$/;"	f
AceEvent:ScheduleEvent	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:ScheduleEvent(event, delay, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceEvent:ScheduleRepeatingEvent	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:ScheduleRepeatingEvent(event, delay, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceEvent:TriggerEvent	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:TriggerEvent(event, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceEvent:UnregisterAllBucketEvents	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:UnregisterAllBucketEvents()$/;"	f
AceEvent:UnregisterAllEvents	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:UnregisterAllEvents()$/;"	f
AceEvent:UnregisterBucketEvent	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:UnregisterBucketEvent(event)$/;"	f
AceEvent:UnregisterEvent	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:UnregisterEvent(event)$/;"	f
AceEvent:activate	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^function AceEvent:activate(oldLib, oldDeactivate)$/;"	f
AceHook:Hook	.\libs\AceHook-2.0\AceHook-2.0.lua	/^function AceHook:Hook(arg1, arg2, arg3)$/;"	f
AceHook:Hook	.\libs\AceHook-2.1\AceHook-2.1.lua	/^function AceHook:Hook(object, method, handler, hookSecure)$/;"	f
AceHook:HookReport	.\libs\AceHook-2.0\AceHook-2.0.lua	/^function AceHook:HookReport()$/;"	f
AceHook:HookReport	.\libs\AceHook-2.1\AceHook-2.1.lua	/^function AceHook:HookReport()$/;"	f
AceHook:HookScript	.\libs\AceHook-2.0\AceHook-2.0.lua	/^function AceHook:HookScript(arg1, arg2, arg3)$/;"	f
AceHook:HookScript	.\libs\AceHook-2.1\AceHook-2.1.lua	/^function AceHook:HookScript(frame, script, handler)$/;"	f
AceHook:IsHooked	.\libs\AceHook-2.0\AceHook-2.0.lua	/^function AceHook:IsHooked(obj, method)$/;"	f
AceHook:IsHooked	.\libs\AceHook-2.1\AceHook-2.1.lua	/^function AceHook:IsHooked(obj, method)$/;"	f
AceHook:OnEmbedDisable	.\libs\AceHook-2.0\AceHook-2.0.lua	/^function AceHook:OnEmbedDisable(target)$/;"	f
AceHook:OnEmbedDisable	.\libs\AceHook-2.1\AceHook-2.1.lua	/^function AceHook:OnEmbedDisable(target)$/;"	f
AceHook:OnInstanceInit	.\libs\AceHook-2.0\AceHook-2.0.lua	/^function AceHook:OnInstanceInit(object)$/;"	f
AceHook:OnInstanceInit	.\libs\AceHook-2.1\AceHook-2.1.lua	/^function AceHook:OnInstanceInit(object)$/;"	f
AceHook:SecureHook	.\libs\AceHook-2.1\AceHook-2.1.lua	/^function AceHook:SecureHook(object, method, handler)$/;"	f
AceHook:Unhook	.\libs\AceHook-2.0\AceHook-2.0.lua	/^function AceHook:Unhook(arg1, arg2)$/;"	f
AceHook:Unhook	.\libs\AceHook-2.1\AceHook-2.1.lua	/^function AceHook:Unhook(obj, method)$/;"	f
AceHook:UnhookAll	.\libs\AceHook-2.0\AceHook-2.0.lua	/^function AceHook:UnhookAll()$/;"	f
AceHook:UnhookAll	.\libs\AceHook-2.1\AceHook-2.1.lua	/^function AceHook:UnhookAll()$/;"	f
AceLibrary:GetInstance	.\libs\AceLibrary\AceLibrary.lua	/^function AceLibrary:GetInstance(major, minor)$/;"	f
AceLibrary:HasInstance	.\libs\AceLibrary\AceLibrary.lua	/^function AceLibrary:HasInstance(major, minor)$/;"	f
AceLibrary:IsNewVersion	.\libs\AceLibrary\AceLibrary.lua	/^function AceLibrary:IsNewVersion(major, minor)$/;"	f
AceLibrary:IterateLibraries	.\libs\AceLibrary\AceLibrary.lua	/^function AceLibrary:IterateLibraries()$/;"	f
AceLibrary:Register	.\libs\AceLibrary\AceLibrary.lua	/^function AceLibrary:Register(newInstance, major, minor, activateFunc, deactivateFunc, externalFunc)$/;"	f
AceLocale.prototype:Debug	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^function AceLocale.prototype:Debug()$/;"	f
AceLocale.prototype:Debug	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:Debug()$/;"	f
AceLocale.prototype:EnableDebugging	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^function AceLocale.prototype:EnableDebugging()$/;"	f
AceLocale.prototype:EnableDebugging	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:EnableDebugging()$/;"	f
AceLocale.prototype:EnableDynamicLocales	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:EnableDynamicLocales(override)$/;"	f
AceLocale.prototype:GetIterator	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^function AceLocale.prototype:GetIterator()$/;"	f
AceLocale.prototype:GetIterator	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:GetIterator()$/;"	f
AceLocale.prototype:GetLocale	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:GetLocale()$/;"	f
AceLocale.prototype:GetReverseIterator	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^function AceLocale.prototype:GetReverseIterator()$/;"	f
AceLocale.prototype:GetReverseIterator	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:GetReverseIterator()$/;"	f
AceLocale.prototype:GetReverseTranslation	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^function AceLocale.prototype:GetReverseTranslation(text)$/;"	f
AceLocale.prototype:GetReverseTranslation	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:GetReverseTranslation(text)$/;"	f
AceLocale.prototype:GetStrictTranslation	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:GetStrictTranslation(text)$/;"	f
AceLocale.prototype:GetTranslation	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^function AceLocale.prototype:GetTranslation(text, sublevel)$/;"	f
AceLocale.prototype:GetTranslation	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:GetTranslation(text)$/;"	f
AceLocale.prototype:GetTranslationStrict	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^function AceLocale.prototype:GetTranslationStrict(text, sublevel)$/;"	f
AceLocale.prototype:HasLocale	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:HasLocale(locale)$/;"	f
AceLocale.prototype:HasReverseTranslation	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^function AceLocale.prototype:HasReverseTranslation(text)$/;"	f
AceLocale.prototype:HasReverseTranslation	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:HasReverseTranslation(text)$/;"	f
AceLocale.prototype:HasTranslation	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^function AceLocale.prototype:HasTranslation(text, sublevel)$/;"	f
AceLocale.prototype:HasTranslation	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:HasTranslation(text)$/;"	f
AceLocale.prototype:IterateAvailableLocales	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:IterateAvailableLocales()$/;"	f
AceLocale.prototype:RegisterTranslations	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^function AceLocale.prototype:RegisterTranslations(locale, func)$/;"	f
AceLocale.prototype:RegisterTranslations	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:RegisterTranslations(locale, func)$/;"	f
AceLocale.prototype:SetLocale	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:SetLocale(locale)$/;"	f
AceLocale.prototype:SetStrictness	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^function AceLocale.prototype:SetStrictness(strict)$/;"	f
AceLocale.prototype:SetStrictness	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale.prototype:SetStrictness(strict)$/;"	f
AceLocale:GetInstance	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^function AceLocale:GetInstance(uid, locale)$/;"	f
AceLocale:HasInstance	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^function AceLocale:HasInstance(uid)$/;"	f
AceLocale:RegisterTranslation	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^function AceLocale:RegisterTranslation(uid, locale, func)$/;"	f
AceLocale:new	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^function AceLocale:new(name)$/;"	f
AceLocale:new	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^function AceLocale:new(name)$/;"	f
AceModuleCore.OnEmbedProfileDisable	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^function AceModuleCore.OnEmbedProfileDisable(AceModuleCore, self, newProfile)$/;"	f
AceModuleCore:GetModule	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^function AceModuleCore:GetModule(name)$/;"	f
AceModuleCore:HasModule	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^function AceModuleCore:HasModule(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceModuleCore:IsModule	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^function AceModuleCore:IsModule(module)$/;"	f
AceModuleCore:IsModuleActive	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^function AceModuleCore:IsModuleActive(module)$/;"	f
AceModuleCore:IterateModules	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^function AceModuleCore:IterateModules()$/;"	f
AceModuleCore:NewModule	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^function AceModuleCore:NewModule(name, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceModuleCore:OnInstanceInit	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^function AceModuleCore:OnInstanceInit(target)$/;"	f
AceModuleCore:SetModuleClass	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^function AceModuleCore:SetModuleClass(class)$/;"	f
AceModuleCore:SetModuleMixins	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^function AceModuleCore:SetModuleMixins(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
AceModuleCore:ToggleModuleActive	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^function AceModuleCore:ToggleModuleActive(module, state)$/;"	f
AceTab:AceEvent_FullyInitialized	.\libs\AceTab-2.0\AceTab-2.0.lua	/^function AceTab:AceEvent_FullyInitialized()$/;"	f
AceTab:IsTabCompletionRegistered	.\libs\AceTab-2.0\AceTab-2.0.lua	/^function AceTab:IsTabCompletionRegistered(descriptor)$/;"	f
AceTab:OnTabPressed	.\libs\AceTab-2.0\AceTab-2.0.lua	/^function AceTab:OnTabPressed()$/;"	f
AceTab:RegisterTabCompletion	.\libs\AceTab-2.0\AceTab-2.0.lua	/^function AceTab:RegisterTabCompletion(descriptor, regex, wlfunc, usage, editframes)$/;"	f
AceTab:UnregisterTabCompletion	.\libs\AceTab-2.0\AceTab-2.0.lua	/^function AceTab:UnregisterTabCompletion(descriptor)$/;"	f
BinaryCheckSum	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	function BinaryCheckSum(text)$/;"	f
CancelLogout	.\libs\AceComm-2.0\AceComm-2.0.lua	/^		function CancelLogout()$/;"	f
ChatFrame_OnEvent	.\libs\AceComm-2.0\AceComm-2.0.lua	/^		function ChatFrame_OnEvent(event)$/;"	f
ChatThrottleLib.Hook_SendAddonMessage	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib.Hook_SendAddonMessage(prefix, text, chattype)$/;"	f
ChatThrottleLib.Hook_SendChatMessage	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib.Hook_SendChatMessage(text, chattype, language, destination)$/;"	f
ChatThrottleLib.MsgBin:Get	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib.MsgBin:Get()$/;"	f
ChatThrottleLib.MsgBin:Put	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib.MsgBin:Put(msg)$/;"	f
ChatThrottleLib.MsgBin:Tidy	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib.MsgBin:Tidy()$/;"	f
ChatThrottleLib.OnEvent	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib.OnEvent()$/;"	f
ChatThrottleLib.OnUpdate	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib.OnUpdate()$/;"	f
ChatThrottleLib.PipeBin:Get	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib.PipeBin:Get()$/;"	f
ChatThrottleLib.PipeBin:Put	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib.PipeBin:Put(pipe)$/;"	f
ChatThrottleLib.PipeBin:Tidy	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib.PipeBin:Tidy()$/;"	f
ChatThrottleLib:Despool	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib:Despool(Prio)$/;"	f
ChatThrottleLib:Enqueue	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib:Enqueue(prioname, pipename, msg)$/;"	f
ChatThrottleLib:Init	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib:Init()	$/;"	f
ChatThrottleLib:SendAddonMessage	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib:SendAddonMessage(prio, prefix, text, chattype)$/;"	f
ChatThrottleLib:SendChatMessage	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib:SendChatMessage(prio, prefix,   text, chattype, language, destination)$/;"	f
ChatThrottleLib:UpdateAvail	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function ChatThrottleLib:UpdateAvail()$/;"	f
CheckRefix	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function CheckRefix()$/;"	f
Class.prototype:init	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	function Class.prototype:init()$/;"	f
Class:ToString	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	function Class:ToString()$/;"	f
Class:init	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	function Class:init(newclass, parent, a1, a2, a3, a4, a5, a6, a7, a8, a9,$/;"	f
Class:new	.\libs\AceOO-2.0\AceOO-2.0.lua	/^function Class:new(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11,$/;"	f
Classpool	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	function Classpool(sc, m1, m2, m3, m4, m5, m6, m7, m8, m9,$/;"	f
CrawlForDeserialization	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function CrawlForDeserialization(t)$/;"	f
CrawlForSerialization	.\libs\AceDB-2.0\AceDB-2.0.lua	/^function CrawlForSerialization(t)$/;"	f
CycleTab	.\libs\AceTab-2.0\AceTab-2.0.lua	/^local function CycleTab()$/;"	f
Debug	.\core.lua	/^local function Debug(msg)$/;"	f
Decode	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function Decode(text, drunk)$/;"	f
DeepReclaim	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	function DeepReclaim(t)$/;"	f
Deserialize	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	function Deserialize(value, hashToText)$/;"	f
DeserializeObject	.\libs\AceDB-2.0\AceDB-2.0.lua	/^local function DeserializeObject(t)$/;"	f
Encode	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function Encode(text, drunk)$/;"	f
FCFDropDown_LoadChannels	.\libs\AceComm-2.0\AceComm-2.0.lua	/^		function FCFDropDown_LoadChannels(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20)$/;"	f
Factory	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	function Factory(obj, newobj, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10,$/;"	f
GCS 	.\libs\AceTab-2.0\AceTab-2.0.lua	/^GCS = function(s1, s2)$/;"	f
GetCurrentGroupDistribution	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function GetCurrentGroupDistribution()$/;"	f
GetCurrentZoneChannel	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function GetCurrentZoneChannel()$/;"	f
GetLatency	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function GetLatency()$/;"	f
HandleMessage	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function HandleMessage(prefix, message, distribution, sender, customChannel)$/;"	f
HexCheckSum	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	function HexCheckSum(text)$/;"	f
Interface.prototype:init	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	function Interface.prototype:init(interface, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
Interface:ToString	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	function Interface:ToString()$/;"	f
IsDeserializable	.\libs\AceDB-2.0\AceDB-2.0.lua	/^local function IsDeserializable(t)$/;"	f
IsInChannel	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function IsInChannel(chan)$/;"	f
IsInDistribution	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function IsInDistribution(dist, customChannel)$/;"	f
IsSerializable	.\libs\AceDB-2.0\AceDB-2.0.lua	/^local function IsSerializable(t)$/;"	f
JoinChannel	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function JoinChannel(channel)$/;"	f
JoinChannelByName	.\libs\AceComm-2.0\AceComm-2.0.lua	/^		function JoinChannelByName(a,b,c,d,e,f,g,h,i,j)$/;"	f
LeaveAceCommChannels	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function LeaveAceCommChannels(all)$/;"	f
LeaveChannel	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function LeaveChannel(channel)$/;"	f
Logout	.\libs\AceComm-2.0\AceComm-2.0.lua	/^		function Logout()$/;"	f
Mixin.prototype:activate	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	function Mixin.prototype:activate(oldLib, oldDeactivate)$/;"	f
Mixin.prototype:embed	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	function Mixin.prototype:embed(target)$/;"	f
Mixin.prototype:init	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	function Mixin.prototype:init(export, a1, a2, a3, a4, a5, a6, a7, a8, a9,$/;"	f
Mixin:ToString	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	function Mixin:ToString()$/;"	f
NewInstance	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^local function NewInstance(self, uid)$/;"	f
NumericCheckSum	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	function NumericCheckSum(text)$/;"	f
Object:init	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	function Object:init(newobject, class)$/;"	f
OnUpdate	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^local function OnUpdate()$/;"	f
Quit	.\libs\AceComm-2.0\AceComm-2.0.lua	/^		function Quit()$/;"	f
RefixAceCommChannelsAndEvents	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function RefixAceCommChannelsAndEvents()$/;"	f
RegisterOnEnable	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^local function RegisterOnEnable(self)$/;"	f
Ring:Add	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function Ring:Add(obj)	-- Append at the "far end" of the ring (aka just before the current position)$/;"	f
Ring:New	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function Ring:New()$/;"	f
Ring:Remove	.\libs\AceComm-2.0\AceComm-2.0.lua	/^function Ring:Remove(obj)$/;"	f
RunScript("local function func(...) for k 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            RunScript("local function func(...) for k = 1,table.getn(arg) do arg[k] = tostring(arg[k]) end DEFAULT_CHAT_FRAME:AddMessage(table.concat(arg, ' ')) end func(" .. text .. ")")$/;"	f
RunScript("local function func(...) local arg 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            RunScript("local function func(...) local arg = {...}; for k = 1,select('#', ...) do arg[k] = tostring(arg[k]) end DEFAULT_CHAT_FRAME:AddMessage(table.concat(arg, ' ')) end func(" .. text .. ")")$/;"	f
SayTimer	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	local function SayTimer()$/;"	f
ScheduleEvent	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^local function ScheduleEvent(self, repeating, event, delay, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
SendAddonMessage 	.\libs\AceComm-2.0\AceComm-2.0.lua	/^			SendAddonMessage = function(a1,a2,a3) return ChatThrottleLib.Hook_SendAddonMessage(a1,a2,a3); end$/;"	f
SendChatMessage 	.\libs\AceComm-2.0\AceComm-2.0.lua	/^		SendChatMessage = function(a1,a2,a3,a4) return ChatThrottleLib.Hook_SendChatMessage(a1,a2,a3,a4); end$/;"	f
SendMessage	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function SendMessage(prefix, priority, distribution, person, message, textToHash)$/;"	f
Serialize	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	function Serialize(value, textToHash)$/;"	f
SerializeObject	.\libs\AceDB-2.0\AceDB-2.0.lua	/^local function SerializeObject(o)$/;"	f
SetFrameWHP	.\core.lua	/^local function SetFrameWHP(f, width, height, point, relativeTo,$/;"	f
SetUnitFrameHighlight	.\core.lua	/^local function SetUnitFrameHighlight(frame, state)$/;"	f
SupposedToBeInChannel	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function SupposedToBeInChannel(chan)$/;"	f
SwitchChannel	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function SwitchChannel(former, latter)$/;"	f
TailoredBinaryCheckSum	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	function TailoredBinaryCheckSum(text)$/;"	f
TailoredHexCheckSum	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	function TailoredHexCheckSum(text)$/;"	f
TailoredNumericCheckSum	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	function TailoredNumericCheckSum(text)$/;"	f
TryToLoadStandalone	.\libs\AceLibrary\AceLibrary.lua	/^local function TryToLoadStandalone(major)$/;"	f
_DeepReclaim	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	local function _DeepReclaim(t)$/;"	f
_Deserialize	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	local function _Deserialize(value, position, hashToText)$/;"	f
_Embed	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function _Embed(state, field, target)$/;"	f
_Serialize	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	local function _Serialize(v, textToHash)$/;"	f
__call	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^local function __call(obj, text, flag)$/;"	f
__call 	.\libs\AceHook-2.0\AceHook-2.0.lua	/^	__call = function(self, a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20)$/;"	f
__call 	.\libs\AceOO-2.0\AceOO-2.0.lua	/^		__call = function(self, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,$/;"	f
__index 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^                    __index = function(self, key)$/;"	f
__index 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^    __index = function(self, key)$/;"	f
__index 	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^	__index = function(self, k)$/;"	f
__index 	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^            __index = function(tbl, key)  $/;"	f
__index 	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^      __index = function(tbl, key)  $/;"	f
__index 	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^	__index = function(self, k)$/;"	f
__newindex 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^    __newindex = function(self, key, value)$/;"	f
__tostring 	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^     __tostring = function()$/;"	f
_debug	.\libs\AceHook-2.0\AceHook-2.0.lua	/^local function _debug(self, msg)$/;"	f
_getFunctionHook	.\libs\AceHook-2.0\AceHook-2.0.lua	/^local function _getFunctionHook(self, func, handler, orig)$/;"	f
_getMethodHook	.\libs\AceHook-2.0\AceHook-2.0.lua	/^local function _getMethodHook(self, object, method, handler, orig, script)$/;"	f
_hookFunc	.\libs\AceHook-2.0\AceHook-2.0.lua	/^local function _hookFunc(self, func, handler)						$/;"	f
_hookMeth	.\libs\AceHook-2.0\AceHook-2.0.lua	/^local function _hookMeth(self, obj, method, handler, script)$/;"	f
_unhookFunc	.\libs\AceHook-2.0\AceHook-2.0.lua	/^local function _unhookFunc(self, func)$/;"	f
_unhookMeth	.\libs\AceHook-2.0\AceHook-2.0.lua	/^local function _unhookMeth(self, obj, method)$/;"	f
activate	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^local function activate(self, oldLib, oldDeactivate)$/;"	f
activate	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function activate(self, oldLib, oldDeactivate)$/;"	f
activate	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^local function activate(self, oldLib, oldDeactivate)$/;"	f
activate	.\libs\AceDB-2.0\AceDB-2.0.lua	/^local function activate(self, oldLib, oldDeactivate)$/;"	f
activate	.\libs\AceHook-2.0\AceHook-2.0.lua	/^local function activate(self, oldLib, oldDeactivate)$/;"	f
activate	.\libs\AceHook-2.1\AceHook-2.1.lua	/^local function activate(self, oldLib, oldDeactivate)$/;"	f
activate	.\libs\AceLibrary\AceLibrary.lua	/^local function activate(self, oldLib, oldDeactivate)$/;"	f
activate	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^local function activate(self, oldLib, oldDeactivate)$/;"	f
activate	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^local function activate(self, oldLib, oldDeactivate)$/;"	f
activate	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^local function activate(self, oldLib, oldDeactivate)$/;"	f
activate	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^local function activate(self, oldLib, oldDeactivate)$/;"	f
activate	.\libs\AceOO-2.0\AceOO-2.0.lua	/^local function activate(self, oldLib, oldDeactivate)$/;"	f
activate	.\libs\AceTab-2.0\AceTab-2.0.lua	/^local function activate(self, oldLib, oldDeactivate)$/;"	f
addToPositions	.\libs\AceLibrary\AceLibrary.lua	/^local function addToPositions(t, major)$/;"	f
arg1[arg2] 	.\libs\AceHook-2.1\AceHook-2.1.lua	/^	arg1[arg2] = function(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20)$/;"	f
argCheck	.\libs\AceLibrary\AceLibrary.lua	/^local function argCheck(self, arg, num, kind, kind2, kind3, kind4, kind5)$/;"	f
assert	.\libs\AceLibrary\AceLibrary.lua	/^local function assert(self, condition, message, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
assert(type(method) 	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^		assert(type(method) == "function" or type(method) == "string")$/;"	f
backbone:ClearLocales	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^function backbone:ClearLocales()$/;"	f
backbone:GetIterator	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^function backbone:GetIterator()$/;"	f
backbone:GetLocaleList	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^function backbone:GetLocaleList()$/;"	f
backbone:GetReverseIterator	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^function backbone:GetReverseIterator()$/;"	f
backbone:HasReverseTranslation	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^function backbone:HasReverseTranslation(text)$/;"	f
backbone:HasTranslation	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^function backbone:HasTranslation(text)$/;"	f
backbone:SetDynamicLocales	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^function backbone:SetDynamicLocales(flag)$/;"	f
backbone:SetLocale	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^function backbone:SetLocale(locale)$/;"	f
backbone:SetStrictness	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^function backbone:SetStrictness(flag)$/;"	f
bucketfunc 	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^		bucketfunc = function(bucket)$/;"	f
class_new	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	function class_new(self, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,$/;"	f
classobjectadd	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function classobjectadd(self, other)$/;"	f
classobjectconcat	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function classobjectconcat(self, other)$/;"	f
classobjectdiv	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function classobjectdiv(self, other)$/;"	f
classobjectequal	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function classobjectequal(self, other)$/;"	f
classobjectlessthan	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function classobjectlessthan(self, other)$/;"	f
classobjectlessthanequal	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function classobjectlessthanequal(self, other)$/;"	f
classobjectmul	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function classobjectmul(self, other)$/;"	f
classobjectpow	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function classobjectpow(self, other)$/;"	f
classobjectstring	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function classobjectstring(t)$/;"	f
classobjectsub	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function classobjectsub(self, other)$/;"	f
classobjectunm	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function classobjectunm(self, other)$/;"	f
cleanDefaults	.\libs\AceDB-2.0\AceDB-2.0.lua	/^local function cleanDefaults(t, defaults)$/;"	f
clearCache	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^local function clearCache(self)$/;"	f
colorCancelFunc 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                colorCancelFunc = function()$/;"	f
colorFunc 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                colorFunc = function()$/;"	f
copyTable	.\libs\AceDB-2.0\AceDB-2.0.lua	/^local function copyTable(to, from)$/;"	f
copyTable	.\libs\AceLibrary\AceLibrary.lua	/^local function copyTable(from)$/;"	f
crawlReplace	.\libs\AceLibrary\AceLibrary.lua	/^	function crawlReplace(t, to, from)$/;"	f
createFunctionHook	.\libs\AceHook-2.1\AceHook-2.1.lua	/^local function createFunctionHook(self, func, handler, orig, secure)$/;"	f
createMethodHook	.\libs\AceHook-2.1\AceHook-2.1.lua	/^local function createMethodHook(self, object, method, handler, orig, secure, script)$/;"	f
createnew	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function createnew(self, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10,$/;"	f
deepTransfer	.\libs\AceLibrary\AceLibrary.lua	/^	function deepTransfer(to, from, saveFields, major, list, list2)$/;"	f
del	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	function del(t)$/;"	f
del	.\libs\AceDB-2.0\AceDB-2.0.lua	/^    function del(t)$/;"	f
del	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^	function del(t)$/;"	f
del	.\libs\AceHook-2.0\AceHook-2.0.lua	/^	function del(t)$/;"	f
del	.\libs\AceHook-2.1\AceHook-2.1.lua	/^	function del(t)$/;"	f
del	.\libs\AceLibrary\AceLibrary.lua	/^	function del(t, depth)$/;"	f
del	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^	function del(t)$/;"	f
del	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^	function del(t)$/;"	f
destroyTable	.\libs\AceLibrary\AceLibrary.lua	/^local function destroyTable(t)$/;"	f
did not return a table. 	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^				AceLocale.error(self, "Bad argument #3 to `RegisterTranslations'. function did not return a table. (expected table, got %s)", type(t))$/;"	f
did not return a table. 	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^		AceLocale.error(self, "Bad argument #3 to `RegisterTranslations'. function did not return a table. (expected table, got %s)", type(t))$/;"	f
did not return a table. 	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^				AceLocale.error(self, "Bad argument #3 to `RegisterTranslations'. function did not return a table. (expected table, got %s)", type(t))$/;"	f
did not return a table. 	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^		AceLocale.error(self, "Bad argument #3 to `RegisterTranslations'. function did not return a table. (expected table, got %s)", type(t))$/;"	f
disabled 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^                    disabled = function()$/;"	f
donothing 	.\libs\AceLibrary\AceLibrary.lua	/^			donothing = function() end$/;"	f
elseif kind 	.\libs\AceComm-2.0\AceComm-2.0.lua	/^		elseif kind == "function" then$/;"	f
elseif options.validate and type(options.validate) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            elseif options.validate and type(options.validate) ~= "string" and type(options.validate) ~= "function" then$/;"	f
elseif type(bit.GetLibraryVersion) 	.\libs\AceOO-2.0\AceOO-2.0.lua	/^		elseif type(bit.GetLibraryVersion) == "function" then$/;"	f
elseif type(handler) ~	.\libs\AceHook-2.0\AceHook-2.0.lua	/^	elseif type(handler) ~= "function" then$/;"	f
elseif type(handler) ~	.\libs\AceHook-2.1\AceHook-2.1.lua	/^	elseif type(handler) ~= "function" then$/;"	f
elseif type(options.func) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            elseif type(options.func) ~= "string" and type(options.func) ~= "function" then$/;"	f
elseif type(options.get) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                elseif type(options.get) == "function" then$/;"	f
elseif type(options.get) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            elseif type(options.get) == "function" then$/;"	f
elseif type(options.get) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            elseif type(options.get) ~= "string" and type(options.get) ~= "function" then$/;"	f
elseif type(passTable.get) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                elseif type(passTable.get) == "function" then$/;"	f
elseif type(passTable.get) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            elseif type(passTable.get) == "function" then$/;"	f
elseif type(rawget(self, 'GetLibraryVersion')) 	.\libs\AceLibrary\AceLibrary.lua	/^	elseif type(rawget(self, 'GetLibraryVersion')) == "function" and AceLibrary:HasInstance(self:GetLibraryVersion()) then$/;"	f
elseif type(rawget(self, 'class')) 	.\libs\AceLibrary\AceLibrary.lua	/^	elseif type(rawget(self, 'class')) == "table" and type(rawget(self.class, 'GetLibraryVersion')) == "function" and AceLibrary:HasInstance(self.class:GetLibraryVersion()) then$/;"	f
elseif type(v.Serialize) ~	.\libs\AceComm-2.0\AceComm-2.0.lua	/^				elseif type(v.Serialize) ~= "function" then$/;"	f
elseif type(v.class.Deserialize) ~	.\libs\AceComm-2.0\AceComm-2.0.lua	/^				elseif type(v.class.Deserialize) ~= "function" then$/;"	f
elseif type(v.class.GetLibraryVersion) ~	.\libs\AceComm-2.0\AceComm-2.0.lua	/^				elseif type(v.class.GetLibraryVersion) ~= "function" or not AceLibrary:HasInstance(v.class:GetLibraryVersion()) then$/;"	f
elseif v ~	.\libs\AceOO-2.0\AceOO-2.0.lua	/^			elseif v ~= "nil" and v ~= "string" and v ~= "number" and v ~= "table" and v ~= "function" then$/;"	f
encodedChar	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function encodedChar(x)$/;"	f
end, __newindex 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^end, __newindex = function(db, key, value)$/;"	f
error	.\libs\AceLibrary\AceLibrary.lua	/^local function error(self, message, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
examine	.\libs\AceLibrary\AceLibrary.lua	/^	local function examine(to, from, list, major)$/;"	f
external	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^local function external(self, major, instance)$/;"	f
external	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function external(self, major, instance)$/;"	f
external	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^function external(self, major, instance)$/;"	f
external	.\libs\AceDB-2.0\AceDB-2.0.lua	/^local function external(self, major, instance)$/;"	f
external	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^local function external(self, major, instance)$/;"	f
external	.\libs\AceTab-2.0\AceTab-2.0.lua	/^local function external(self, major, instance)$/;"	f
findTableLevel	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^local function findTableLevel(self, options, chat, text, index, passTable)$/;"	f
func	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^		local function func()$/;"	f
func	.\libs\AceLibrary\AceLibrary.lua	/^	local function func(t, to, from)$/;"	f
func 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^							func = function()$/;"	f
func 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^					func = function()$/;"	f
func 	.\libs\AceComm-2.0\AceComm-2.0.lua	/^		func = function(text)$/;"	f
getcomplexuid	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function getcomplexuid(sc, m1, m2, m3, m4, m5, m6, m7, m8, m9,$/;"	f
getlibrary	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^local function getlibrary(lib)$/;"	f
getlibrary	.\libs\AceOO-2.0\AceOO-2.0.lua	/^local function getlibrary(o)$/;"	f
getuid	.\libs\AceOO-2.0\AceOO-2.0.lua	/^local function getuid(t)$/;"	f
handler	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^        function handler(msg)$/;"	f
handler 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                handler = function(msg)$/;"	f
handlerFunc	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^local function handlerFunc(self, chat, msg, options)$/;"	f
hookFunction	.\libs\AceHook-2.1\AceHook-2.1.lua	/^local function hookFunction(self, func, handler, secure)$/;"	f
hookMethod	.\libs\AceHook-2.1\AceHook-2.1.lua	/^local function hookMethod(self, obj, method, handler, script, secure)$/;"	f
hooksecurefunc	.\libs\AceHook-2.1\AceHook-2.1.lua	/^local function hooksecurefunc(arg1, arg2, arg3)$/;"	f
if (type(addon.IsActive) ~	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^			if (type(addon.IsActive) ~= "function" or addon:IsActive()) and (not AceModuleCore or not AceModuleCore:IsModule(addon) or AceModuleCore:IsModuleActive(addon)) then$/;"	f
if (type(self.IsActive) 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^	if (type(self.IsActive) == "function" and not self:IsActive()) or (AceModuleCore and AceModuleCore:IsModule(addon) and AceModuleCore:IsModuleActive(addon)) then$/;"	f
if (type(self.IsActive) ~	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^		if (type(self.IsActive) ~= "function" or self:IsActive()) and (not AceModuleCore or not AceModuleCore:IsModule(self) or AceModuleCore:IsModuleActive(self)) then$/;"	f
if g and type(g) 	.\libs\AceComm-2.0\AceComm-2.0.lua	/^								if g and type(g) == "function" then$/;"	f
if g and type(g) 	.\libs\AceComm-2.0\AceComm-2.0.lua	/^							if g and type(g) == "function" then$/;"	f
if g and type(g) 	.\libs\AceComm-2.0\AceComm-2.0.lua	/^						if g and type(g) == "function" then$/;"	f
if g and type(g) 	.\libs\AceComm-2.0\AceComm-2.0.lua	/^					if g and type(g) == "function" then$/;"	f
if not autoEmbed and type(self.OnManualEmbed) 	.\libs\AceOO-2.0\AceOO-2.0.lua	/^		if not autoEmbed and type(self.OnManualEmbed) == "function" then$/;"	f
if not frame[0] or type(frame.IsFrameType) ~	.\libs\AceHook-2.1\AceHook-2.1.lua	/^	if not frame[0] or type(frame.IsFrameType) ~= "function" then$/;"	f
if not name and type(object.GetName) 	.\libs\AceHook-2.0\AceHook-2.0.lua	/^	if not name and type(object.GetName) == "function" then$/;"	f
if not orig or type(orig) ~	.\libs\AceHook-2.0\AceHook-2.0.lua	/^	if not orig or type(orig) ~= "function" then$/;"	f
if not orig or type(orig) ~	.\libs\AceHook-2.1\AceHook-2.1.lua	/^	if not orig or type(orig) ~= "function" then$/;"	f
if options.cmdHidden and type(options.cmdHidden) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^    if options.cmdHidden and type(options.cmdHidden) == "string" and type(self[options.cmdHidden]) ~= "function" then$/;"	f
if options.disabled and type(options.disabled) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^    if options.disabled and type(options.disabled) == "string" and type(self[options.disabled]) ~= "function" then$/;"	f
if options.func and type(options.func) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^        if options.func and type(options.func) == "string" and type(self[options.func]) ~= "function" then$/;"	f
if options.func and type(options.func) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^        if options.func and type(options.func) ~= "string" and type(options.func) ~= "function" then$/;"	f
if options.guiHidden and type(options.guiHidden) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^    if options.guiHidden and type(options.guiHidden) == "string" and type(self[options.guiHidden]) ~= "function" then$/;"	f
if options.hidden and type(options.hidden) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^    if options.hidden and type(options.hidden) == "string" and type(self[options.hidden]) ~= "function" then$/;"	f
if self.registry[name] and type(rawget(self.registry[name], 'GetLibraryVersion')) ~	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^	if self.registry[name] and type(rawget(self.registry[name], 'GetLibraryVersion')) ~= "function" then$/;"	f
if self.registry[name] and type(rawget(self.registry[name], 'GetLibraryVersion')) ~	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^	if self.registry[name] and type(rawget(self.registry[name], 'GetLibraryVersion')) ~= "function" then$/;"	f
if type(addon.OnEnable) 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^				if type(addon.OnEnable) == "function" then$/;"	f
if type(addon.OnInitialize) 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^	if type(addon.OnInitialize) == "function" then$/;"	f
if type(class.Deserialize) ~	.\libs\AceComm-2.0\AceComm-2.0.lua	/^			if type(class.Deserialize) ~= "function" or type(class.prototype.Serialize) ~= "function" then$/;"	f
if type(class.GetAceOptionsDataTable) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^        if type(class.GetAceOptionsDataTable) == "function" then$/;"	f
if type(disabled) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                        if type(disabled) == "function" then$/;"	f
if type(disabled) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(disabled) == "function" then$/;"	f
if type(disabled) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^        if type(disabled) == "function" then$/;"	f
if type(event) 	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^				if type(event) == "function" then$/;"	f
if type(handler[disabled]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                            if type(handler[disabled]) ~= "function" then$/;"	f
if type(handler[disabled]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(handler[disabled]) ~= "function" then$/;"	f
if type(handler[disabled]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(handler[disabled]) ~= "function" then$/;"	f
if type(handler[hidden]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                            if type(handler[hidden]) ~= "function" then$/;"	f
if type(handler[hidden]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(handler[hidden]) ~= "function" then$/;"	f
if type(handler[hidden]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(handler[hidden]) ~= "function" then$/;"	f
if type(handler[options.func]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(handler[options.func]) ~= "function" then$/;"	f
if type(handler[options.get]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                    if type(handler[options.get]) ~= "function" then$/;"	f
if type(handler[options.get]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(handler[options.get]) ~= "function" then$/;"	f
if type(handler[options.set]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                        if type(handler[options.set]) ~= "function" then$/;"	f
if type(handler[options.set]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                    if type(handler[options.set]) ~= "function" then$/;"	f
if type(handler[options.set]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(handler[options.set]) ~= "function" then$/;"	f
if type(handler[options.validate]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                    if type(handler[options.validate]) ~= "function" then$/;"	f
if type(handler[passFunc]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(handler[passFunc]) ~= "function" then$/;"	f
if type(handler[passTable.get]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                    if type(handler[passTable.get]) ~= "function" then$/;"	f
if type(handler[passTable.get]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(handler[passTable.get]) ~= "function" then$/;"	f
if type(handler[passTable.set]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                        if type(handler[passTable.set]) ~= "function" then$/;"	f
if type(handler[passTable.set]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                    if type(handler[passTable.set]) ~= "function" then$/;"	f
if type(handler[passTable.set]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(handler[passTable.set]) ~= "function" then$/;"	f
if type(handler[v.get]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                            if type(handler[v.get]) ~= "function" then$/;"	f
if type(hidden) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                        if type(hidden) == "function" then$/;"	f
if type(hidden) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(hidden) == "function" then$/;"	f
if type(hidden) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^        if type(hidden) == "function" then$/;"	f
if type(method) 	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	if type(method) == "string" and type(self[method]) ~= "function" and type(self[method]) ~= "table" then$/;"	f
if type(method) 	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^		if type(method) == "string" and type(self[method]) ~= "function" then$/;"	f
if type(method) 	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^	if type(method) == "string" and type(self[method]) ~= "function" then$/;"	f
if type(mixin.GetAceOptionsDataTable) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(mixin.GetAceOptionsDataTable) == "function" then$/;"	f
if type(mixin.OnEmbedDisable) 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^                        if type(mixin.OnEmbedDisable) == "function" then$/;"	f
if type(mixin.OnEmbedDisable) 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^                    if type(mixin.OnEmbedDisable) == "function" then$/;"	f
if type(mixin.OnEmbedDisable) 	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^					if type(mixin.OnEmbedDisable) == "function" then$/;"	f
if type(mixin.OnEmbedEnable) 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^							if type(mixin.OnEmbedEnable) == "function" then$/;"	f
if type(mixin.OnEmbedEnable) 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^						if type(mixin.OnEmbedEnable) == "function" then$/;"	f
if type(mixin.OnEmbedEnable) 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^                        if type(mixin.OnEmbedEnable) == "function" then$/;"	f
if type(mixin.OnEmbedEnable) 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^                    if type(mixin.OnEmbedEnable) == "function" then$/;"	f
if type(mixin.OnEmbedEnable) 	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^					if type(mixin.OnEmbedEnable) == "function" then$/;"	f
if type(mixin.OnEmbedInitialize) 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^				if type(mixin.OnEmbedInitialize) == "function" then$/;"	f
if type(mixin.OnEmbedProfileDisable) 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^                if type(mixin.OnEmbedProfileDisable) == "function" then$/;"	f
if type(mixin.OnEmbedProfileEnable) 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^                if type(mixin.OnEmbedProfileEnable) == "function" then$/;"	f
if type(mixin.OnInstanceInit) 	.\libs\AceOO-2.0\AceOO-2.0.lua	/^					if type(mixin.OnInstanceInit) == "function" then$/;"	f
if type(module.IsActive) 	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^		if type(module.IsActive) == "function" or type(module.ToggleActive) == "function" then$/;"	f
if type(module.IsActive) 	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^	if type(module.IsActive) == "function" then$/;"	f
if type(module.OnDisable) 	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^		if type(module.OnDisable) == "function" then$/;"	f
if type(module.OnEnable) 	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^		if type(module.OnEnable) == "function" then$/;"	f
if type(module.ToggleActive) 	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^	if type(module.ToggleActive) == "function" then$/;"	f
if type(options) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^    if type(options) == "function" then$/;"	f
if type(options) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^    if type(options) ~= "table" and type(options) ~= "function" and options ~= nil then$/;"	f
if type(options.cmdHidden) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^        if type(options.cmdHidden) ~= "function" and type(options.cmdHidden) ~= "string" and options.cmdHidden ~= true then$/;"	f
if type(options.disabled) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^        if type(options.disabled) ~= "function" and type(options.disabled) ~= "string" and options.disabled ~= true then$/;"	f
if type(options.func) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(options.func) == "function" then$/;"	f
if type(options.func) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(options.func) ~= "string" and type(options.func) ~= "function" then$/;"	f
if type(options.get) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(options.get) == "function" then$/;"	f
if type(options.get) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(options.get) == "function" then$/;"	f
if type(options.get) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(options.get) == "string" and type(self[options.get]) ~= "function" then$/;"	f
if type(options.get) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(options.get) ~= "string" and type(options.get) ~= "function" then$/;"	f
if type(options.get) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(options.get) ~= "string" and type(options.get) ~= "function" then$/;"	f
if type(options.guiHidden) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^        if type(options.guiHidden) ~= "function" and type(options.guiHidden) ~= "string" and options.guiHidden ~= true then$/;"	f
if type(options.hidden) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^        if type(options.hidden) ~= "function" and type(options.hidden) ~= "string" and options.hidden ~= true then$/;"	f
if type(options.set) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                    if type(options.set) == "function" then$/;"	f
if type(options.set) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(options.set) == "function" then$/;"	f
if type(options.set) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(options.set) == "function" then$/;"	f
if type(options.set) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(options.set) == "string" and type(self[options.set]) ~= "function" then$/;"	f
if type(options.set) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(options.set) ~= "string" and type(options.set) ~= "function" then$/;"	f
if type(options.set) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(options.set) ~= "string" and type(options.set) ~= "function" then$/;"	f
if type(options.validate) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(options.validate) == "function" then$/;"	f
if type(options.validate) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(options.validate) == "string" and type(self[options.validate]) ~= "function" then$/;"	f
if type(options.validate) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(options.validate) ~= "string" and type(options.validate) ~= "function" then$/;"	f
if type(orig) ~	.\libs\AceHook-2.1\AceHook-2.1.lua	/^		if type(orig) ~= "function" then$/;"	f
if type(orig) ~	.\libs\AceTab-2.0\AceTab-2.0.lua	/^						if type(orig) ~= "function" then$/;"	f
if type(orig) ~	.\libs\AceTab-2.0\AceTab-2.0.lua	/^			if type(orig) ~= "function" then$/;"	f
if type(ost) ~	.\libs\AceTab-2.0\AceTab-2.0.lua	/^	if type(ost) ~= "function" then$/;"	f
if type(passFunc) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(passFunc) == "function" then$/;"	f
if type(passTable.get) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(passTable.get) == "function" then$/;"	f
if type(passTable.get) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(passTable.get) == "function" then$/;"	f
if type(passTable.set) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                    if type(passTable.set) == "function" then$/;"	f
if type(passTable.set) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                if type(passTable.set) == "function" then$/;"	f
if type(passTable.set) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^            if type(passTable.set) == "function" then$/;"	f
if type(rawget(object, 'GetLibraryVersion')) 	.\libs\AceHook-2.0\AceHook-2.0.lua	/^	if type(rawget(object, 'GetLibraryVersion')) == "function" then$/;"	f
if type(rawget(self, 'GetLibraryVersion')) 	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^	if type(rawget(self, 'GetLibraryVersion')) == "function" then$/;"	f
if type(rawget(self, 'GetLibraryVersion')) 	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^	if type(rawget(self, 'GetLibraryVersion')) == "function" then$/;"	f
if type(self.GetLibraryVersion) 	.\libs\AceOO-2.0\AceOO-2.0.lua	/^		if type(self.GetLibraryVersion) == "function" then$/;"	f
if type(self.IsActive) 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^	if type(self.IsActive) == "function" then$/;"	f
if type(self.OnDisable) 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^            if type(self.OnDisable) == "function" then$/;"	f
if type(self.OnDisable) 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^        if type(self.OnDisable) == "function" then$/;"	f
if type(self.OnEnable) 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^			if type(self.OnEnable) == "function" then$/;"	f
if type(self.OnEnable) 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^            if type(self.OnEnable) == "function" then$/;"	f
if type(self.OnEnable) 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^        if type(self.OnEnable) == "function" then$/;"	f
if type(self.OnProfileDisable) 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^    if type(self.OnProfileDisable) == "function" then$/;"	f
if type(self.OnProfileEnable) 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^    if type(self.OnProfileEnable) == "function" then$/;"	f
if type(self[handler]) ~	.\libs\AceHook-2.0\AceHook-2.0.lua	/^		if type(self[handler]) ~= "function" then$/;"	f
if type(self[handler]) ~	.\libs\AceHook-2.1\AceHook-2.1.lua	/^		if type(self[handler]) ~= "function" then$/;"	f
if type(t.get) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                                if type(t.get) == "function" then$/;"	f
if type(t.handler[t.get]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                                    if type(t.handler[t.get]) ~= "function" then$/;"	f
if type(t.handler[t.get]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                            if type(t.handler[t.get]) ~= "function" then$/;"	f
if type(t.handler[t.set]) ~	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                            if type(t.handler[t.set]) ~= "function" then$/;"	f
if type(t.set) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                        if type(t.set) == "function" then$/;"	f
if type(u) 	.\libs\AceTab-2.0\AceTab-2.0.lua	/^				if type(u) == "function" then$/;"	f
if type(usage) 	.\libs\AceTab-2.0\AceTab-2.0.lua	/^	if type(usage) == "string" and type(self[usage]) ~= "function" then$/;"	f
if type(v) ~	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^	if type(v) ~= "function" and type(k) ~= "table" then$/;"	f
if type(v) ~	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^	if type(v) ~= "function" and type(k) ~= "table" then$/;"	f
if type(v.get) 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                        if type(v.get) == "function" then$/;"	f
if type(wlfunc) 	.\libs\AceTab-2.0\AceTab-2.0.lua	/^	if type(wlfunc) == "string" and type(self[wlfunc]) ~= "function" then$/;"	f
inheritDefaults	.\libs\AceDB-2.0\AceDB-2.0.lua	/^local function inheritDefaults(t, defaults)$/;"	f
inherits	.\libs\AceOO-2.0\AceOO-2.0.lua	/^local function inherits(object, parent)$/;"	f
initReverse	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^local function initReverse(self)$/;"	f
initReverse	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^local function initReverse(self)$/;"	f
initReverse	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^local function initReverse(self)$/;"	f
isFrame	.\libs\AceLibrary\AceLibrary.lua	/^local function isFrame(frame)$/;"	f
issecurevariable	.\libs\AceHook-2.1\AceHook-2.1.lua	/^local function issecurevariable(x)$/;"	f
iter	.\libs\AceLibrary\AceLibrary.lua	/^		local function iter(t, k)$/;"	f
iter	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^local function iter(t, position)$/;"	f
listAddon	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^		local function listAddon(addon, depth)$/;"	f
listNormalAddon	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^		local function listNormalAddon(i)$/;"	f
local __call 	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^local __call = function(self, key1, key2)$/;"	f
local __index 	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^local __index = function(self, key)$/;"	f
local __index 	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^local __index = function(self, key)$/;"	f
local __newindex 	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^local __newindex = function(self, k, v)$/;"	f
local __newindex 	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^local __newindex = function(self, k, v)$/;"	f
local __tostring 	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^local __tostring = function(self)$/;"	f
local __tostring 	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^local __tostring = function(self)$/;"	f
local db_mt 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^local db_mt = { __index = function(db, key)$/;"	f
local f 	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^		local f = function()$/;"	f
local func 	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^	local func = function(arg1)$/;"	f
local myFunc 	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	local myFunc = function(k)$/;"	f
local namespace_mt 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^local namespace_mt = { __index = function(namespace, key)$/;"	f
local refixInstance 	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^local refixInstance = function(instance)$/;"	f
mt.__index 	.\libs\AceLocale-2.1\AceLocale-2.1.lua	/^        mt.__index = function(tbl, key)  $/;"	f
mySort	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^		local function mySort(alpha, bravo)$/;"	f
mysort 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^                mysort = function(a, b)$/;"	f
new	.\libs\AceComm-2.0\AceComm-2.0.lua	/^	function new()$/;"	f
new	.\libs\AceDB-2.0\AceDB-2.0.lua	/^    function new()$/;"	f
new	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^	function new()$/;"	f
new	.\libs\AceHook-2.0\AceHook-2.0.lua	/^	function new()$/;"	f
new	.\libs\AceHook-2.1\AceHook-2.1.lua	/^	function new()$/;"	f
new	.\libs\AceLibrary\AceLibrary.lua	/^	function new()$/;"	f
new	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^	function new()$/;"	f
new	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^	function new()$/;"	f
new	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function new(obj, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,$/;"	f
newindex	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function newindex(k, v)$/;"	f
objtostring	.\libs\AceOO-2.0\AceOO-2.0.lua	/^local function objtostring(self)$/;"	f
or nil, got %s)", type	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^        AceConsole:error("Bad argument #3 to `RegisterChatCommand' (expected table, function, or nil, got %s)", type(options))$/;"	f
orig 	.\libs\AceHook-2.0\AceHook-2.0.lua	/^			orig = function() end$/;"	f
orig 	.\libs\AceHook-2.1\AceHook-2.1.lua	/^			orig = function() end$/;"	f
orig 	.\libs\AceTab-2.0\AceTab-2.0.lua	/^							orig = function() end$/;"	f
orig 	.\libs\AceTab-2.0\AceTab-2.0.lua	/^				orig = function() end$/;"	f
pad	.\libs\AceOO-2.0\AceOO-2.0.lua	/^local function pad(cap)$/;"	f
pcall	.\libs\AceLibrary\AceLibrary.lua	/^local function pcall(self, func, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20)$/;"	f
print	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^local function print(text)$/;"	f
print	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^local function print(text, name, r, g, b, frame, delay)$/;"	f
print	.\libs\AceDebug-2.0\AceDebug-2.0.lua	/^local function print(text, r, g, b, frame, delay)$/;"	f
print	.\libs\AceHook-2.0\AceHook-2.0.lua	/^local function print(text)$/;"	f
printUsage	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^local function printUsage(self, handler, realOptions, options, path, args, quiet, filter)$/;"	f
protonewindex	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function protonewindex(k, v)$/;"	f
protostring	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function protostring(t)$/;"	f
refixInstance	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^local function refixInstance(instance)$/;"	f
return AceOO.inherits(t, AceOO.Class) and t.class and type(t.class.Deserialize) 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^    return AceOO.inherits(t, AceOO.Class) and t.class and type(t.class.Deserialize) == "function" and type(t.Serialize) == "function" and type(t.class.GetLibraryVersion) == "function"$/;"	f
return type(frame) 	.\libs\AceLibrary\AceLibrary.lua	/^	return type(frame) == "table" and type(rawget(frame, 0)) == "userdata" and type(rawget(frame, 'IsFrameType')) == "function" and getmetatable(frame) and type(rawget(getmetatable(frame), '__index')) == "function"$/;"	f
safecall	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^local function safecall(func,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)$/;"	f
safecall	.\libs\AceDB-2.0\AceDB-2.0.lua	/^local function safecall(func,a,b,c,d,e,f,g,h,i)$/;"	f
safecall	.\libs\AceLibrary\AceLibrary.lua	/^local function safecall(func,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)$/;"	f
safecall	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^local function safecall(func,a,b,c,d,e,f,g)$/;"	f
scheduleClear 	.\libs\AceLocale-2.2\AceLocale-2.2.lua	/^	scheduleClear = function()$/;"	f
set 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^							set = function(...)$/;"	f
set 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^					set = function(text)$/;"	f
setmetatable(CATEGORIES, { __index 	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^setmetatable(CATEGORIES, { __index = function(self, key) -- case-insensitive$/;"	f
setmetatable(Object, { __tostring 	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	setmetatable(Object, { __tostring = function() return 'Object' end })$/;"	f
sjUF:CreateUnitFrame	.\core.lua	/^function sjUF:CreateUnitFrame(id, index)$/;"	f
sjUF:InitOptions	.\core.lua	/^function sjUF:InitOptions()$/;"	f
sjUF:InitVariables	.\core.lua	/^function sjUF:InitVariables()$/;"	f
sjUF:OnDisable	.\core.lua	/^function sjUF:OnDisable()$/;"	f
sjUF:OnEnable	.\core.lua	/^function sjUF:OnEnable()$/;"	f
sjUF:OnInitialize	.\core.lua	/^function sjUF:OnInitialize()$/;"	f
sjUF:OnUnitFrameClick	.\core.lua	/^function sjUF:OnUnitFrameClick()$/;"	f
sjUF:SetUnitFrameStyle	.\core.lua	/^function sjUF:SetUnitFrameStyle(f, id, index)$/;"	f
sjUF:UpdateRaidFrames	.\core.lua	/^function sjUF:UpdateRaidFrames()$/;"	f
soberEncodedChar	.\libs\AceComm-2.0\AceComm-2.0.lua	/^local function soberEncodedChar(x)$/;"	f
stripSpaces	.\libs\AceAddon-2.0\AceAddon-2.0.lua	/^local function stripSpaces(text)$/;"	f
svnRevisionToNumber	.\libs\AceLibrary\AceLibrary.lua	/^local function svnRevisionToNumber(text)$/;"	f
table_setn 	.\libs\AceComm-2.0\AceComm-2.0.lua	/^		table_setn = function() end$/;"	f
table_setn 	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^        table_setn = function() end$/;"	f
table_setn 	.\libs\AceDB-2.0\AceDB-2.0.lua	/^        table_setn = function() end$/;"	f
table_setn 	.\libs\AceDebug-2.0\AceDebug-2.0.lua	/^		table_setn = function() end$/;"	f
table_setn 	.\libs\AceEvent-2.0\AceEvent-2.0.lua	/^		table_setn = function() end$/;"	f
table_setn 	.\libs\AceHook-2.0\AceHook-2.0.lua	/^		table_setn = function() end$/;"	f
table_setn 	.\libs\AceLibrary\AceLibrary.lua	/^		table_setn = function() end$/;"	f
table_setn 	.\libs\AceLocale-2.0\AceLocale-2.0.lua	/^		table_setn = function() end$/;"	f
table_setn 	.\libs\AceModuleCore-2.0\AceModuleCore-2.0.lua	/^		table_setn = function() end$/;"	f
table_setn 	.\libs\AceOO-2.0\AceOO-2.0.lua	/^		table_setn = function() end$/;"	f
traverseInterfaces	.\libs\AceOO-2.0\AceOO-2.0.lua	/^local function traverseInterfaces(bit, total)$/;"	f
ts	.\libs\AceOO-2.0\AceOO-2.0.lua	/^	local function ts(bit)$/;"	f
uid 	.\libs\AceHook-2.1\AceHook-2.1.lua	/^			uid = function()$/;"	f
uid 	.\libs\AceHook-2.1\AceHook-2.1.lua	/^			uid = function(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20)$/;"	f
unhookFunction	.\libs\AceHook-2.1\AceHook-2.1.lua	/^local function unhookFunction(self, func)$/;"	f
unhookMethod	.\libs\AceHook-2.1\AceHook-2.1.lua	/^local function unhookMethod(self, obj, method)$/;"	f
validateInterface	.\libs\AceOO-2.0\AceOO-2.0.lua	/^local function validateInterface(object, interface)$/;"	f
validateOptions	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^local function validateOptions(options, position, baseOptions, fromPass)$/;"	f
validateOptionsMethods	.\libs\AceConsole-2.0\AceConsole-2.0.lua	/^local function validateOptionsMethods(self, options, position)$/;"	f
